1)
  a) Verdadeiro pois,
    de acordo com techopedia em (https://www.techopedia.com/definition/4230/backward-compatible),
    compatibilidade reversa refere-se a um sistema de hardware ou software que pode utilizar
    a interface de uma versão mais antiga do mesmo produto.
    Logo, a compatibilidade entre compiladores de versões distintas de Java e C/C++ pode
    ser encarada como um exemplo de compatibilidade reversa.

  b)Verdadeiro pois a checagem logo na compilação, evita compilar código sem definição de tipos,
     ou tentativa de operações inválidas com tipos diferentes. Sinalizando de imediato o erro,
     assim evitando que operações inválidas compilem e tenham saídas erradas.

  c) Falso. Portabilidade em linguagens de programação de alto-nível é a capacidade
  de utilizar o mesmo software em diferentes ambientes (sistemas operacionais e
  plataformas de hardware). O pré-requisito da portabilidade é uma boa abstração
   entre lógica de aplicação e interfaces de sistema. Uma linguagem capaz de servir
   a diferentes contextos de aplicação é chamada de linguagem de próposito geral.

  d) V
  e) F // primeira geracao == [0,1] segunda geracao == [assembly] terceira geração == [C, Pascal], quart == [Prolog]
  f) V
  g) V ? Contrução de linguagens afetadas pelo hardware e tecnologia
  h) F
  i) V Simula67 Suporta herança?
  j) F

  2) Exemplos de linguagens cujo projeto foram caracterizados por:
    a) Portabilidade e Eficiência
        C
    b) Confiabilidade e Portabilidade
        Java
    c) Simplicidade e Extensibilidade
        Python
    d) Confiabilidade e Ortogonalidade
    e) Eficiência e Extensibilidade
        C++
